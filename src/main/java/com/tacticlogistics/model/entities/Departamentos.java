package com.tacticlogistics.model.entities;
// Generated 28/09/2015 11:33:59 AM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Departamentos generated by hbm2java
 */
@Entity
@Table(name = "Departamentos", catalog = "dbo", uniqueConstraints = {
		@UniqueConstraint(columnNames = { "Pais_Id", "Codigo" }),
		@UniqueConstraint(columnNames = { "Pais_Id", "Nombre" }) })
public class Departamentos implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	private DepartamentosId id;
	private Paises paises;
	private String codigo;
	private String nombre;
	private short ordinal;
	private boolean activo;
	private Date fechaActualizacion;
	private String usuarioActualizacion;
	private Set<Ciudades> ciudadeses = new HashSet<Ciudades>(0);

	public Departamentos() {
	}

	public Departamentos(DepartamentosId id, Paises paises, String codigo, String nombre, short ordinal, boolean activo,
			Date fechaActualizacion, String usuarioActualizacion) {
		this.id = id;
		this.paises = paises;
		this.codigo = codigo;
		this.nombre = nombre;
		this.ordinal = ordinal;
		this.activo = activo;
		this.fechaActualizacion = fechaActualizacion;
		this.usuarioActualizacion = usuarioActualizacion;
	}

	public Departamentos(DepartamentosId id, Paises paises, String codigo, String nombre, short ordinal, boolean activo,
			Date fechaActualizacion, String usuarioActualizacion, Set<Ciudades> ciudadeses) {
		this.id = id;
		this.paises = paises;
		this.codigo = codigo;
		this.nombre = nombre;
		this.ordinal = ordinal;
		this.activo = activo;
		this.fechaActualizacion = fechaActualizacion;
		this.usuarioActualizacion = usuarioActualizacion;
		this.ciudadeses = ciudadeses;
	}

	@EmbeddedId

	@AttributeOverrides({ @AttributeOverride(name = "paisId", column = @Column(name = "Pais_Id", nullable = false) ),
			@AttributeOverride(name = "departamentoId", column = @Column(name = "Departamento_Id", nullable = false) ) })
	public DepartamentosId getId() {
		return this.id;
	}

	public void setId(DepartamentosId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Pais_Id", nullable = false, insertable = false, updatable = false)
	public Paises getPaises() {
		return this.paises;
	}

	public void setPaises(Paises paises) {
		this.paises = paises;
	}

	@Column(name = "Codigo", nullable = false, length = 3)
	public String getCodigo() {
		return this.codigo;
	}

	public void setCodigo(String codigo) {
		this.codigo = codigo;
	}

	@Column(name = "Nombre", nullable = false, length = 200)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "Ordinal", nullable = false)
	public short getOrdinal() {
		return this.ordinal;
	}

	public void setOrdinal(short ordinal) {
		this.ordinal = ordinal;
	}

	@Column(name = "Activo", nullable = false)
	public boolean isActivo() {
		return this.activo;
	}

	public void setActivo(boolean activo) {
		this.activo = activo;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "Fecha_Actualizacion", nullable = false, length = 19)
	public Date getFechaActualizacion() {
		return this.fechaActualizacion;
	}

	public void setFechaActualizacion(Date fechaActualizacion) {
		this.fechaActualizacion = fechaActualizacion;
	}

	@Column(name = "Usuario_Actualizacion", nullable = false, length = 50)
	public String getUsuarioActualizacion() {
		return this.usuarioActualizacion;
	}

	public void setUsuarioActualizacion(String usuarioActualizacion) {
		this.usuarioActualizacion = usuarioActualizacion;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "departamentos")
	public Set<Ciudades> getCiudadeses() {
		return this.ciudadeses;
	}

	public void setCiudadeses(Set<Ciudades> ciudadeses) {
		this.ciudadeses = ciudadeses;
	}

}
