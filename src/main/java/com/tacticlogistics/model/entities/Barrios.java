package com.tacticlogistics.model.entities;
// Generated 28/09/2015 11:33:59 AM by Hibernate Tools 4.3.1

import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Barrios generated by hbm2java
 */
@Entity
@Table(name = "Barrios", catalog = "dbo", uniqueConstraints = @UniqueConstraint(columnNames = { "Ciudad_Id", "Zona_Id",
		"Nombre" }) )
public class Barrios implements java.io.Serializable {

	private BarriosId id;
	private Ciudades ciudades;
	private Zonas zonas;
	private String nombre;
	private short ordinal;
	private boolean activo;
	private Date fechaActualizacion;
	private String usuarioActualizacion;

	public Barrios() {
	}

	public Barrios(BarriosId id, Ciudades ciudades, Zonas zonas, String nombre, short ordinal, boolean activo,
			Date fechaActualizacion, String usuarioActualizacion) {
		this.id = id;
		this.ciudades = ciudades;
		this.zonas = zonas;
		this.nombre = nombre;
		this.ordinal = ordinal;
		this.activo = activo;
		this.fechaActualizacion = fechaActualizacion;
		this.usuarioActualizacion = usuarioActualizacion;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "ciudadId", column = @Column(name = "Ciudad_Id", nullable = false) ),
			@AttributeOverride(name = "barrioId", column = @Column(name = "Barrio_Id", nullable = false) ) })
	public BarriosId getId() {
		return this.id;
	}

	public void setId(BarriosId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Ciudad_Id", nullable = false, insertable = false, updatable = false)
	public Ciudades getCiudades() {
		return this.ciudades;
	}

	public void setCiudades(Ciudades ciudades) {
		this.ciudades = ciudades;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Zona_Id", nullable = false)
	public Zonas getZonas() {
		return this.zonas;
	}

	public void setZonas(Zonas zonas) {
		this.zonas = zonas;
	}

	@Column(name = "Nombre", nullable = false, length = 100)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "Ordinal", nullable = false)
	public short getOrdinal() {
		return this.ordinal;
	}

	public void setOrdinal(short ordinal) {
		this.ordinal = ordinal;
	}

	@Column(name = "Activo", nullable = false)
	public boolean isActivo() {
		return this.activo;
	}

	public void setActivo(boolean activo) {
		this.activo = activo;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "Fecha_Actualizacion", nullable = false, length = 19)
	public Date getFechaActualizacion() {
		return this.fechaActualizacion;
	}

	public void setFechaActualizacion(Date fechaActualizacion) {
		this.fechaActualizacion = fechaActualizacion;
	}

	@Column(name = "Usuario_Actualizacion", nullable = false, length = 50)
	public String getUsuarioActualizacion() {
		return this.usuarioActualizacion;
	}

	public void setUsuarioActualizacion(String usuarioActualizacion) {
		this.usuarioActualizacion = usuarioActualizacion;
	}

}
