package com.tacticlogistics.model.entities;
// Generated 28/09/2015 11:33:59 AM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * CentrosDistribucion generated by hbm2java
 */
@Entity
@Table(name = "Centros_Distribucion", catalog = "dbo")
public class CentrosDistribucion implements java.io.Serializable {

	private short centroDistribucionId;
	private Direcciones direcciones;
	private OperadoresCentroDistribucion operadoresCentroDistribucion;
	private TiposCentroDistribucion tiposCentroDistribucion;
	private String codigo;
	private String nombre;
	private boolean activo;
	private Date fechaActualizacion;
	private String usuarioActualizacion;
	private Set<OrdenesTransporte> ordenesTransportesForCentroDistribucionDestinoId = new HashSet<OrdenesTransporte>(0);
	private Set<OrdenesTransporte> ordenesTransportesForCentroDistribucionOrigenId = new HashSet<OrdenesTransporte>(0);

	public CentrosDistribucion() {
	}

	public CentrosDistribucion(short centroDistribucionId, Direcciones direcciones,
			OperadoresCentroDistribucion operadoresCentroDistribucion, TiposCentroDistribucion tiposCentroDistribucion,
			String codigo, String nombre, boolean activo, Date fechaActualizacion, String usuarioActualizacion) {
		this.centroDistribucionId = centroDistribucionId;
		this.direcciones = direcciones;
		this.operadoresCentroDistribucion = operadoresCentroDistribucion;
		this.tiposCentroDistribucion = tiposCentroDistribucion;
		this.codigo = codigo;
		this.nombre = nombre;
		this.activo = activo;
		this.fechaActualizacion = fechaActualizacion;
		this.usuarioActualizacion = usuarioActualizacion;
	}

	public CentrosDistribucion(short centroDistribucionId, Direcciones direcciones,
			OperadoresCentroDistribucion operadoresCentroDistribucion, TiposCentroDistribucion tiposCentroDistribucion,
			String codigo, String nombre, boolean activo, Date fechaActualizacion, String usuarioActualizacion,
			Set<OrdenesTransporte> ordenesTransportesForCentroDistribucionDestinoId,
			Set<OrdenesTransporte> ordenesTransportesForCentroDistribucionOrigenId) {
		this.centroDistribucionId = centroDistribucionId;
		this.direcciones = direcciones;
		this.operadoresCentroDistribucion = operadoresCentroDistribucion;
		this.tiposCentroDistribucion = tiposCentroDistribucion;
		this.codigo = codigo;
		this.nombre = nombre;
		this.activo = activo;
		this.fechaActualizacion = fechaActualizacion;
		this.usuarioActualizacion = usuarioActualizacion;
		this.ordenesTransportesForCentroDistribucionDestinoId = ordenesTransportesForCentroDistribucionDestinoId;
		this.ordenesTransportesForCentroDistribucionOrigenId = ordenesTransportesForCentroDistribucionOrigenId;
	}

	@Id

	@Column(name = "Centro_Distribucion_Id", unique = true, nullable = false)
	public short getCentroDistribucionId() {
		return this.centroDistribucionId;
	}

	public void setCentroDistribucionId(short centroDistribucionId) {
		this.centroDistribucionId = centroDistribucionId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Direccion_Id", nullable = false)
	public Direcciones getDirecciones() {
		return this.direcciones;
	}

	public void setDirecciones(Direcciones direcciones) {
		this.direcciones = direcciones;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Operador_Centro_Distribucion_Id", nullable = false)
	public OperadoresCentroDistribucion getOperadoresCentroDistribucion() {
		return this.operadoresCentroDistribucion;
	}

	public void setOperadoresCentroDistribucion(OperadoresCentroDistribucion operadoresCentroDistribucion) {
		this.operadoresCentroDistribucion = operadoresCentroDistribucion;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Tipo_Centro_Distribucion_Id", nullable = false)
	public TiposCentroDistribucion getTiposCentroDistribucion() {
		return this.tiposCentroDistribucion;
	}

	public void setTiposCentroDistribucion(TiposCentroDistribucion tiposCentroDistribucion) {
		this.tiposCentroDistribucion = tiposCentroDistribucion;
	}

	@Column(name = "Codigo", nullable = false, length = 20)
	public String getCodigo() {
		return this.codigo;
	}

	public void setCodigo(String codigo) {
		this.codigo = codigo;
	}

	@Column(name = "Nombre", nullable = false, length = 50)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "Activo", nullable = false)
	public boolean isActivo() {
		return this.activo;
	}

	public void setActivo(boolean activo) {
		this.activo = activo;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "Fecha_Actualizacion", nullable = false, length = 19)
	public Date getFechaActualizacion() {
		return this.fechaActualizacion;
	}

	public void setFechaActualizacion(Date fechaActualizacion) {
		this.fechaActualizacion = fechaActualizacion;
	}

	@Column(name = "Usuario_Actualizacion", nullable = false, length = 50)
	public String getUsuarioActualizacion() {
		return this.usuarioActualizacion;
	}

	public void setUsuarioActualizacion(String usuarioActualizacion) {
		this.usuarioActualizacion = usuarioActualizacion;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "centrosDistribucionByCentroDistribucionDestinoId")
	public Set<OrdenesTransporte> getOrdenesTransportesForCentroDistribucionDestinoId() {
		return this.ordenesTransportesForCentroDistribucionDestinoId;
	}

	public void setOrdenesTransportesForCentroDistribucionDestinoId(
			Set<OrdenesTransporte> ordenesTransportesForCentroDistribucionDestinoId) {
		this.ordenesTransportesForCentroDistribucionDestinoId = ordenesTransportesForCentroDistribucionDestinoId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "centrosDistribucionByCentroDistribucionOrigenId")
	public Set<OrdenesTransporte> getOrdenesTransportesForCentroDistribucionOrigenId() {
		return this.ordenesTransportesForCentroDistribucionOrigenId;
	}

	public void setOrdenesTransportesForCentroDistribucionOrigenId(
			Set<OrdenesTransporte> ordenesTransportesForCentroDistribucionOrigenId) {
		this.ordenesTransportesForCentroDistribucionOrigenId = ordenesTransportesForCentroDistribucionOrigenId;
	}

}
