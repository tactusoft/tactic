package com.tacticlogistics.model.entities;
// Generated 28/09/2015 11:33:59 AM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * RadicacionesOrdenTransporte generated by hbm2java
 */
@Entity
@Table(name = "Radicaciones_Orden_Transporte", catalog = "dbo")
public class RadicacionesOrdenTransporte implements java.io.Serializable {

	private RadicacionesOrdenTransporteId id;
	private Clientes clientes;
	private TiposOrdenTransporte tiposOrdenTransporte;
	private Date fechaRadicacion;
	private boolean activo;
	private Date fechaActualizacion;
	private String usuarioActualizacion;
	private Set<OrdenesTransporte> ordenesTransportes = new HashSet<OrdenesTransporte>(0);

	public RadicacionesOrdenTransporte() {
	}

	public RadicacionesOrdenTransporte(RadicacionesOrdenTransporteId id, Clientes clientes,
			TiposOrdenTransporte tiposOrdenTransporte, Date fechaRadicacion, boolean activo, Date fechaActualizacion,
			String usuarioActualizacion) {
		this.id = id;
		this.clientes = clientes;
		this.tiposOrdenTransporte = tiposOrdenTransporte;
		this.fechaRadicacion = fechaRadicacion;
		this.activo = activo;
		this.fechaActualizacion = fechaActualizacion;
		this.usuarioActualizacion = usuarioActualizacion;
	}

	public RadicacionesOrdenTransporte(RadicacionesOrdenTransporteId id, Clientes clientes,
			TiposOrdenTransporte tiposOrdenTransporte, Date fechaRadicacion, boolean activo, Date fechaActualizacion,
			String usuarioActualizacion, Set<OrdenesTransporte> ordenesTransportes) {
		this.id = id;
		this.clientes = clientes;
		this.tiposOrdenTransporte = tiposOrdenTransporte;
		this.fechaRadicacion = fechaRadicacion;
		this.activo = activo;
		this.fechaActualizacion = fechaActualizacion;
		this.usuarioActualizacion = usuarioActualizacion;
		this.ordenesTransportes = ordenesTransportes;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "radicacionOrdenTransporteId", column = @Column(name = "Radicacion_Orden_Transporte_Id", nullable = false) ),
			@AttributeOverride(name = "clienteId", column = @Column(name = "Cliente_Id", nullable = false) ),
			@AttributeOverride(name = "tipoOrdenTransporteId", column = @Column(name = "Tipo_Orden_Transporte_Id", nullable = false) ) })
	public RadicacionesOrdenTransporteId getId() {
		return this.id;
	}

	public void setId(RadicacionesOrdenTransporteId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Cliente_Id", nullable = false, insertable = false, updatable = false)
	public Clientes getClientes() {
		return this.clientes;
	}

	public void setClientes(Clientes clientes) {
		this.clientes = clientes;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Tipo_Orden_Transporte_Id", nullable = false, insertable = false, updatable = false)
	public TiposOrdenTransporte getTiposOrdenTransporte() {
		return this.tiposOrdenTransporte;
	}

	public void setTiposOrdenTransporte(TiposOrdenTransporte tiposOrdenTransporte) {
		this.tiposOrdenTransporte = tiposOrdenTransporte;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "Fecha_Radicacion", nullable = false, length = 27)
	public Date getFechaRadicacion() {
		return this.fechaRadicacion;
	}

	public void setFechaRadicacion(Date fechaRadicacion) {
		this.fechaRadicacion = fechaRadicacion;
	}

	@Column(name = "Activo", nullable = false)
	public boolean isActivo() {
		return this.activo;
	}

	public void setActivo(boolean activo) {
		this.activo = activo;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "Fecha_Actualizacion", nullable = false, length = 19)
	public Date getFechaActualizacion() {
		return this.fechaActualizacion;
	}

	public void setFechaActualizacion(Date fechaActualizacion) {
		this.fechaActualizacion = fechaActualizacion;
	}

	@Column(name = "Usuario_Actualizacion", nullable = false, length = 50)
	public String getUsuarioActualizacion() {
		return this.usuarioActualizacion;
	}

	public void setUsuarioActualizacion(String usuarioActualizacion) {
		this.usuarioActualizacion = usuarioActualizacion;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "radicacionesOrdenTransporte")
	public Set<OrdenesTransporte> getOrdenesTransportes() {
		return this.ordenesTransportes;
	}

	public void setOrdenesTransportes(Set<OrdenesTransporte> ordenesTransportes) {
		this.ordenesTransportes = ordenesTransportes;
	}

}
