package com.tacticlogistics.model.entities;
// Generated 28/09/2015 11:33:59 AM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Direcciones generated by hbm2java
 */
@Entity
@Table(name = "Direcciones", catalog = "dbo")
public class Direcciones implements java.io.Serializable {

	private int direccionId;
	private Ciudades ciudades;
	private TiposDireccion tiposDireccion;
	private Zonas zonas;
	private byte tipoUsoDireccionId;
	private String nombre;
	private String direccion;
	private String indicaciones;
	private boolean urbana;
	private String barrio;
	private String codigoPostal;
	private String nombreContacto;
	private String cargoContacto;
	private String telefonoFijo;
	private String telefonoMovil;
	private String email;
	private boolean activo;
	private Date fechaActualizacion;
	private String usuarioActualizacion;
	private Set<ClientesFinalesDireccion> clientesFinalesDireccions = new HashSet<ClientesFinalesDireccion>(0);
	private Set<CentrosDistribucion> centrosDistribucions = new HashSet<CentrosDistribucion>(0);

	public Direcciones() {
	}

	public Direcciones(int direccionId, Ciudades ciudades, TiposDireccion tiposDireccion, byte tipoUsoDireccionId,
			String nombre, String direccion, String indicaciones, boolean urbana, String barrio, String codigoPostal,
			String nombreContacto, String cargoContacto, String telefonoFijo, String telefonoMovil, String email,
			boolean activo, Date fechaActualizacion, String usuarioActualizacion) {
		this.direccionId = direccionId;
		this.ciudades = ciudades;
		this.tiposDireccion = tiposDireccion;
		this.tipoUsoDireccionId = tipoUsoDireccionId;
		this.nombre = nombre;
		this.direccion = direccion;
		this.indicaciones = indicaciones;
		this.urbana = urbana;
		this.barrio = barrio;
		this.codigoPostal = codigoPostal;
		this.nombreContacto = nombreContacto;
		this.cargoContacto = cargoContacto;
		this.telefonoFijo = telefonoFijo;
		this.telefonoMovil = telefonoMovil;
		this.email = email;
		this.activo = activo;
		this.fechaActualizacion = fechaActualizacion;
		this.usuarioActualizacion = usuarioActualizacion;
	}

	public Direcciones(int direccionId, Ciudades ciudades, TiposDireccion tiposDireccion, Zonas zonas,
			byte tipoUsoDireccionId, String nombre, String direccion, String indicaciones, boolean urbana,
			String barrio, String codigoPostal, String nombreContacto, String cargoContacto, String telefonoFijo,
			String telefonoMovil, String email, boolean activo, Date fechaActualizacion, String usuarioActualizacion,
			Set<ClientesFinalesDireccion> clientesFinalesDireccions, Set<CentrosDistribucion> centrosDistribucions) {
		this.direccionId = direccionId;
		this.ciudades = ciudades;
		this.tiposDireccion = tiposDireccion;
		this.zonas = zonas;
		this.tipoUsoDireccionId = tipoUsoDireccionId;
		this.nombre = nombre;
		this.direccion = direccion;
		this.indicaciones = indicaciones;
		this.urbana = urbana;
		this.barrio = barrio;
		this.codigoPostal = codigoPostal;
		this.nombreContacto = nombreContacto;
		this.cargoContacto = cargoContacto;
		this.telefonoFijo = telefonoFijo;
		this.telefonoMovil = telefonoMovil;
		this.email = email;
		this.activo = activo;
		this.fechaActualizacion = fechaActualizacion;
		this.usuarioActualizacion = usuarioActualizacion;
		this.clientesFinalesDireccions = clientesFinalesDireccions;
		this.centrosDistribucions = centrosDistribucions;
	}

	@Id

	@Column(name = "Direccion_Id", unique = true, nullable = false)
	public int getDireccionId() {
		return this.direccionId;
	}

	public void setDireccionId(int direccionId) {
		this.direccionId = direccionId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Ciudad_Id", nullable = false)
	public Ciudades getCiudades() {
		return this.ciudades;
	}

	public void setCiudades(Ciudades ciudades) {
		this.ciudades = ciudades;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Tipo_Direccion_Id", nullable = false)
	public TiposDireccion getTiposDireccion() {
		return this.tiposDireccion;
	}

	public void setTiposDireccion(TiposDireccion tiposDireccion) {
		this.tiposDireccion = tiposDireccion;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Zona_Id")
	public Zonas getZonas() {
		return this.zonas;
	}

	public void setZonas(Zonas zonas) {
		this.zonas = zonas;
	}

	@Column(name = "Tipo_Uso_Direccion_Id", nullable = false)
	public byte getTipoUsoDireccionId() {
		return this.tipoUsoDireccionId;
	}

	public void setTipoUsoDireccionId(byte tipoUsoDireccionId) {
		this.tipoUsoDireccionId = tipoUsoDireccionId;
	}

	@Column(name = "Nombre", nullable = false, length = 50)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "Direccion", nullable = false, length = 200)
	public String getDireccion() {
		return this.direccion;
	}

	public void setDireccion(String direccion) {
		this.direccion = direccion;
	}

	@Column(name = "Indicaciones", nullable = false, length = 200)
	public String getIndicaciones() {
		return this.indicaciones;
	}

	public void setIndicaciones(String indicaciones) {
		this.indicaciones = indicaciones;
	}

	@Column(name = "Urbana", nullable = false)
	public boolean isUrbana() {
		return this.urbana;
	}

	public void setUrbana(boolean urbana) {
		this.urbana = urbana;
	}

	@Column(name = "Barrio", nullable = false, length = 100)
	public String getBarrio() {
		return this.barrio;
	}

	public void setBarrio(String barrio) {
		this.barrio = barrio;
	}

	@Column(name = "Codigo_Postal", nullable = false, length = 10)
	public String getCodigoPostal() {
		return this.codigoPostal;
	}

	public void setCodigoPostal(String codigoPostal) {
		this.codigoPostal = codigoPostal;
	}

	@Column(name = "Nombre_Contacto", nullable = false, length = 200)
	public String getNombreContacto() {
		return this.nombreContacto;
	}

	public void setNombreContacto(String nombreContacto) {
		this.nombreContacto = nombreContacto;
	}

	@Column(name = "Cargo_Contacto", nullable = false, length = 50)
	public String getCargoContacto() {
		return this.cargoContacto;
	}

	public void setCargoContacto(String cargoContacto) {
		this.cargoContacto = cargoContacto;
	}

	@Column(name = "Telefono_Fijo", nullable = false, length = 20)
	public String getTelefonoFijo() {
		return this.telefonoFijo;
	}

	public void setTelefonoFijo(String telefonoFijo) {
		this.telefonoFijo = telefonoFijo;
	}

	@Column(name = "Telefono_Movil", nullable = false, length = 20)
	public String getTelefonoMovil() {
		return this.telefonoMovil;
	}

	public void setTelefonoMovil(String telefonoMovil) {
		this.telefonoMovil = telefonoMovil;
	}

	@Column(name = "Email", nullable = false, length = 50)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "Activo", nullable = false)
	public boolean isActivo() {
		return this.activo;
	}

	public void setActivo(boolean activo) {
		this.activo = activo;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "Fecha_Actualizacion", nullable = false, length = 19)
	public Date getFechaActualizacion() {
		return this.fechaActualizacion;
	}

	public void setFechaActualizacion(Date fechaActualizacion) {
		this.fechaActualizacion = fechaActualizacion;
	}

	@Column(name = "Usuario_Actualizacion", nullable = false, length = 50)
	public String getUsuarioActualizacion() {
		return this.usuarioActualizacion;
	}

	public void setUsuarioActualizacion(String usuarioActualizacion) {
		this.usuarioActualizacion = usuarioActualizacion;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "direcciones")
	public Set<ClientesFinalesDireccion> getClientesFinalesDireccions() {
		return this.clientesFinalesDireccions;
	}

	public void setClientesFinalesDireccions(Set<ClientesFinalesDireccion> clientesFinalesDireccions) {
		this.clientesFinalesDireccions = clientesFinalesDireccions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "direcciones")
	public Set<CentrosDistribucion> getCentrosDistribucions() {
		return this.centrosDistribucions;
	}

	public void setCentrosDistribucions(Set<CentrosDistribucion> centrosDistribucions) {
		this.centrosDistribucions = centrosDistribucions;
	}

}
