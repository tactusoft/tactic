package com.tacticlogistics.model.entities;
// Generated 28/09/2015 11:33:59 AM by Hibernate Tools 4.3.1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * OrdenesTransporte generated by hbm2java
 */
@Entity
@Table(name = "Ordenes_Transporte", catalog = "dbo")
public class OrdenesTransporte implements java.io.Serializable {

	private int ordenTransporteId;
	private CausalesAnulacionOrdenTransporte causalesAnulacionOrdenTransporte;
	private CentrosDistribucion centrosDistribucionByCentroDistribucionDestinoId;
	private CentrosDistribucion centrosDistribucionByCentroDistribucionOrigenId;
	private Ciudades ciudadesByCiudadEntregaId;
	private Ciudades ciudadesByCiudadOrigenId;
	private ClientesFinalesDireccion clientesFinalesDireccion;
	private EstadosOrdenTransporte estadosOrdenTransporte;
	private RadicacionesOrdenTransporte radicacionesOrdenTransporte;
	private TiposFormaPago tiposFormaPago;
	private TiposIdentificacion tiposIdentificacion;
	private TiposOperacionTransporte tiposOperacionTransporte;
	private Zonas zonas;
	private String codigoReferenciaCliente;
	private Date fechaEntrega;
	private Date entregarDesde;
	private Date entregarHasta;
	private boolean recaudo;
	private int valorRecaudo;
	private String identificacion;
	private String nombrePersonaAutorizada;
	private boolean activo;
	private Date fechaActualizacion;
	private String usuarioActualizacion;
	private OrdenesTransporteVehiculo ordenesTransporteVehiculo;

	public OrdenesTransporte() {
	}

	public OrdenesTransporte(int ordenTransporteId, Ciudades ciudadesByCiudadEntregaId,
			Ciudades ciudadesByCiudadOrigenId, ClientesFinalesDireccion clientesFinalesDireccion,
			EstadosOrdenTransporte estadosOrdenTransporte, RadicacionesOrdenTransporte radicacionesOrdenTransporte,
			TiposFormaPago tiposFormaPago, TiposIdentificacion tiposIdentificacion,
			TiposOperacionTransporte tiposOperacionTransporte, String codigoReferenciaCliente, Date fechaEntrega,
			Date entregarDesde, Date entregarHasta, boolean recaudo, int valorRecaudo, String identificacion,
			String nombrePersonaAutorizada, boolean activo, Date fechaActualizacion, String usuarioActualizacion) {
		this.ordenTransporteId = ordenTransporteId;
		this.ciudadesByCiudadEntregaId = ciudadesByCiudadEntregaId;
		this.ciudadesByCiudadOrigenId = ciudadesByCiudadOrigenId;
		this.clientesFinalesDireccion = clientesFinalesDireccion;
		this.estadosOrdenTransporte = estadosOrdenTransporte;
		this.radicacionesOrdenTransporte = radicacionesOrdenTransporte;
		this.tiposFormaPago = tiposFormaPago;
		this.tiposIdentificacion = tiposIdentificacion;
		this.tiposOperacionTransporte = tiposOperacionTransporte;
		this.codigoReferenciaCliente = codigoReferenciaCliente;
		this.fechaEntrega = fechaEntrega;
		this.entregarDesde = entregarDesde;
		this.entregarHasta = entregarHasta;
		this.recaudo = recaudo;
		this.valorRecaudo = valorRecaudo;
		this.identificacion = identificacion;
		this.nombrePersonaAutorizada = nombrePersonaAutorizada;
		this.activo = activo;
		this.fechaActualizacion = fechaActualizacion;
		this.usuarioActualizacion = usuarioActualizacion;
	}

	public OrdenesTransporte(int ordenTransporteId, CausalesAnulacionOrdenTransporte causalesAnulacionOrdenTransporte,
			CentrosDistribucion centrosDistribucionByCentroDistribucionDestinoId,
			CentrosDistribucion centrosDistribucionByCentroDistribucionOrigenId, Ciudades ciudadesByCiudadEntregaId,
			Ciudades ciudadesByCiudadOrigenId, ClientesFinalesDireccion clientesFinalesDireccion,
			EstadosOrdenTransporte estadosOrdenTransporte, RadicacionesOrdenTransporte radicacionesOrdenTransporte,
			TiposFormaPago tiposFormaPago, TiposIdentificacion tiposIdentificacion,
			TiposOperacionTransporte tiposOperacionTransporte, Zonas zonas, String codigoReferenciaCliente,
			Date fechaEntrega, Date entregarDesde, Date entregarHasta, boolean recaudo, int valorRecaudo,
			String identificacion, String nombrePersonaAutorizada, boolean activo, Date fechaActualizacion,
			String usuarioActualizacion, OrdenesTransporteVehiculo ordenesTransporteVehiculo) {
		this.ordenTransporteId = ordenTransporteId;
		this.causalesAnulacionOrdenTransporte = causalesAnulacionOrdenTransporte;
		this.centrosDistribucionByCentroDistribucionDestinoId = centrosDistribucionByCentroDistribucionDestinoId;
		this.centrosDistribucionByCentroDistribucionOrigenId = centrosDistribucionByCentroDistribucionOrigenId;
		this.ciudadesByCiudadEntregaId = ciudadesByCiudadEntregaId;
		this.ciudadesByCiudadOrigenId = ciudadesByCiudadOrigenId;
		this.clientesFinalesDireccion = clientesFinalesDireccion;
		this.estadosOrdenTransporte = estadosOrdenTransporte;
		this.radicacionesOrdenTransporte = radicacionesOrdenTransporte;
		this.tiposFormaPago = tiposFormaPago;
		this.tiposIdentificacion = tiposIdentificacion;
		this.tiposOperacionTransporte = tiposOperacionTransporte;
		this.zonas = zonas;
		this.codigoReferenciaCliente = codigoReferenciaCliente;
		this.fechaEntrega = fechaEntrega;
		this.entregarDesde = entregarDesde;
		this.entregarHasta = entregarHasta;
		this.recaudo = recaudo;
		this.valorRecaudo = valorRecaudo;
		this.identificacion = identificacion;
		this.nombrePersonaAutorizada = nombrePersonaAutorizada;
		this.activo = activo;
		this.fechaActualizacion = fechaActualizacion;
		this.usuarioActualizacion = usuarioActualizacion;
		this.ordenesTransporteVehiculo = ordenesTransporteVehiculo;
	}

	@Id

	@Column(name = "Orden_Transporte_Id", unique = true, nullable = false)
	public int getOrdenTransporteId() {
		return this.ordenTransporteId;
	}

	public void setOrdenTransporteId(int ordenTransporteId) {
		this.ordenTransporteId = ordenTransporteId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Causal_Anulacion_Orden_Transporte_Id")
	public CausalesAnulacionOrdenTransporte getCausalesAnulacionOrdenTransporte() {
		return this.causalesAnulacionOrdenTransporte;
	}

	public void setCausalesAnulacionOrdenTransporte(CausalesAnulacionOrdenTransporte causalesAnulacionOrdenTransporte) {
		this.causalesAnulacionOrdenTransporte = causalesAnulacionOrdenTransporte;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Centro_Distribucion_Destino_Id")
	public CentrosDistribucion getCentrosDistribucionByCentroDistribucionDestinoId() {
		return this.centrosDistribucionByCentroDistribucionDestinoId;
	}

	public void setCentrosDistribucionByCentroDistribucionDestinoId(
			CentrosDistribucion centrosDistribucionByCentroDistribucionDestinoId) {
		this.centrosDistribucionByCentroDistribucionDestinoId = centrosDistribucionByCentroDistribucionDestinoId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Centro_Distribucion_Origen_Id")
	public CentrosDistribucion getCentrosDistribucionByCentroDistribucionOrigenId() {
		return this.centrosDistribucionByCentroDistribucionOrigenId;
	}

	public void setCentrosDistribucionByCentroDistribucionOrigenId(
			CentrosDistribucion centrosDistribucionByCentroDistribucionOrigenId) {
		this.centrosDistribucionByCentroDistribucionOrigenId = centrosDistribucionByCentroDistribucionOrigenId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Ciudad_Entrega_Id", nullable = false)
	public Ciudades getCiudadesByCiudadEntregaId() {
		return this.ciudadesByCiudadEntregaId;
	}

	public void setCiudadesByCiudadEntregaId(Ciudades ciudadesByCiudadEntregaId) {
		this.ciudadesByCiudadEntregaId = ciudadesByCiudadEntregaId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Ciudad_Origen_Id", nullable = false)
	public Ciudades getCiudadesByCiudadOrigenId() {
		return this.ciudadesByCiudadOrigenId;
	}

	public void setCiudadesByCiudadOrigenId(Ciudades ciudadesByCiudadOrigenId) {
		this.ciudadesByCiudadOrigenId = ciudadesByCiudadOrigenId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "Cliente_Final_Id", referencedColumnName = "Cliente_Final_Id", nullable = false),
			@JoinColumn(name = "Cliente_Final_Direccion_Id", referencedColumnName = "Direccion_Id", nullable = false) })
	public ClientesFinalesDireccion getClientesFinalesDireccion() {
		return this.clientesFinalesDireccion;
	}

	public void setClientesFinalesDireccion(ClientesFinalesDireccion clientesFinalesDireccion) {
		this.clientesFinalesDireccion = clientesFinalesDireccion;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Estado_Orden_Transporte_Id", nullable = false)
	public EstadosOrdenTransporte getEstadosOrdenTransporte() {
		return this.estadosOrdenTransporte;
	}

	public void setEstadosOrdenTransporte(EstadosOrdenTransporte estadosOrdenTransporte) {
		this.estadosOrdenTransporte = estadosOrdenTransporte;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "Radicacion_Orden_Transporte_Id", referencedColumnName = "Radicacion_Orden_Transporte_Id", nullable = false),
			@JoinColumn(name = "Cliente_Id", referencedColumnName = "Cliente_Id", nullable = false),
			@JoinColumn(name = "Tipo_Orden_Transporte_Id", referencedColumnName = "Tipo_Orden_Transporte_Id", nullable = false) })
	public RadicacionesOrdenTransporte getRadicacionesOrdenTransporte() {
		return this.radicacionesOrdenTransporte;
	}

	public void setRadicacionesOrdenTransporte(RadicacionesOrdenTransporte radicacionesOrdenTransporte) {
		this.radicacionesOrdenTransporte = radicacionesOrdenTransporte;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Tipo_Forma_Pago_Id", nullable = false)
	public TiposFormaPago getTiposFormaPago() {
		return this.tiposFormaPago;
	}

	public void setTiposFormaPago(TiposFormaPago tiposFormaPago) {
		this.tiposFormaPago = tiposFormaPago;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Tipo_Identificacion_Id", nullable = false)
	public TiposIdentificacion getTiposIdentificacion() {
		return this.tiposIdentificacion;
	}

	public void setTiposIdentificacion(TiposIdentificacion tiposIdentificacion) {
		this.tiposIdentificacion = tiposIdentificacion;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Tipo_Operacion_Transporte_Id", nullable = false)
	public TiposOperacionTransporte getTiposOperacionTransporte() {
		return this.tiposOperacionTransporte;
	}

	public void setTiposOperacionTransporte(TiposOperacionTransporte tiposOperacionTransporte) {
		this.tiposOperacionTransporte = tiposOperacionTransporte;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Zona_Entrega_Id")
	public Zonas getZonas() {
		return this.zonas;
	}

	public void setZonas(Zonas zonas) {
		this.zonas = zonas;
	}

	@Column(name = "Codigo_Referencia_Cliente", nullable = false, length = 30)
	public String getCodigoReferenciaCliente() {
		return this.codigoReferenciaCliente;
	}

	public void setCodigoReferenciaCliente(String codigoReferenciaCliente) {
		this.codigoReferenciaCliente = codigoReferenciaCliente;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "Fecha_Entrega", nullable = false, length = 10)
	public Date getFechaEntrega() {
		return this.fechaEntrega;
	}

	public void setFechaEntrega(Date fechaEntrega) {
		this.fechaEntrega = fechaEntrega;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "Entregar_Desde", nullable = false, length = 8)
	public Date getEntregarDesde() {
		return this.entregarDesde;
	}

	public void setEntregarDesde(Date entregarDesde) {
		this.entregarDesde = entregarDesde;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "Entregar_Hasta", nullable = false, length = 8)
	public Date getEntregarHasta() {
		return this.entregarHasta;
	}

	public void setEntregarHasta(Date entregarHasta) {
		this.entregarHasta = entregarHasta;
	}

	@Column(name = "Recaudo", nullable = false)
	public boolean isRecaudo() {
		return this.recaudo;
	}

	public void setRecaudo(boolean recaudo) {
		this.recaudo = recaudo;
	}

	@Column(name = "Valor_Recaudo", nullable = false)
	public int getValorRecaudo() {
		return this.valorRecaudo;
	}

	public void setValorRecaudo(int valorRecaudo) {
		this.valorRecaudo = valorRecaudo;
	}

	@Column(name = "Identificacion", nullable = false, length = 20)
	public String getIdentificacion() {
		return this.identificacion;
	}

	public void setIdentificacion(String identificacion) {
		this.identificacion = identificacion;
	}

	@Column(name = "Nombre_Persona_Autorizada", nullable = false, length = 200)
	public String getNombrePersonaAutorizada() {
		return this.nombrePersonaAutorizada;
	}

	public void setNombrePersonaAutorizada(String nombrePersonaAutorizada) {
		this.nombrePersonaAutorizada = nombrePersonaAutorizada;
	}

	@Column(name = "Activo", nullable = false)
	public boolean isActivo() {
		return this.activo;
	}

	public void setActivo(boolean activo) {
		this.activo = activo;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "Fecha_Actualizacion", nullable = false, length = 19)
	public Date getFechaActualizacion() {
		return this.fechaActualizacion;
	}

	public void setFechaActualizacion(Date fechaActualizacion) {
		this.fechaActualizacion = fechaActualizacion;
	}

	@Column(name = "Usuario_Actualizacion", nullable = false, length = 50)
	public String getUsuarioActualizacion() {
		return this.usuarioActualizacion;
	}

	public void setUsuarioActualizacion(String usuarioActualizacion) {
		this.usuarioActualizacion = usuarioActualizacion;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "ordenesTransporte")
	public OrdenesTransporteVehiculo getOrdenesTransporteVehiculo() {
		return this.ordenesTransporteVehiculo;
	}

	public void setOrdenesTransporteVehiculo(OrdenesTransporteVehiculo ordenesTransporteVehiculo) {
		this.ordenesTransporteVehiculo = ordenesTransporteVehiculo;
	}

}
